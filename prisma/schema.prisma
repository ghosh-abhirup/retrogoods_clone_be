// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserType {
  provider
  customer
}

enum OrderStatusType {
  order_placed
  order_shipped
  on_the_way
  delivered
}

model User {
  id           String   @id @default(uuid())
  firstname    String?
  lastname     String?
  email        String
  password     String
  type         UserType
  refreshToken String?

  products  Product[]
  orders    Orders[]
  wishlist  Wishlist[]
  createdAt DateTime   @default(now())
}

model Product {
  id   String @id @default(uuid())
  name String
  sku  String @unique

  providerId String
  provider   User   @relation(fields: [providerId], references: [id])

  orderProductPivots OrderProductPivots[]
  productLots        ProductLot[]
  wishlist           Wishlist[]

  createdAt DateTime @default(now())
}

model ProductLot {
  id        String @id @default(uuid())
  name      String
  available Int

  productId String
  product   Product @relation(fields: [productId], references: [id])

  orderProductPivots OrderProductPivots[]
}

model Orders {
  id String @id @default(uuid())

  customerId String
  customer   User   @relation(fields: [customerId], references: [id])

  address_line_1 String
  address_line_2 String?
  pincode        Int

  orderProductPivots OrderProductPivots[]

  status    OrderStatusType
  createdAt DateTime        @default(now())
}

model OrderProductPivots {
  id Int @id @unique @default(autoincrement())

  productId String
  product   Product @relation(fields: [productId], references: [id])

  productLotId String
  productLot   ProductLot @relation(fields: [productLotId], references: [id])

  orderId String
  order   Orders @relation(fields: [orderId], references: [id])

  quantity Int
}

model Wishlist {
  id Int @id @unique @default(autoincrement())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  productId String
  product   Product @relation(fields: [productId], references: [id])
}
